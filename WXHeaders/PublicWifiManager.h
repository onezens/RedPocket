//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "MMService.h"

#import "APAccessDelegate.h"
#import "APAuthDelegate.h"
#import "APCheckDelegate.h"
#import "APCheckPwdDelegate.h"
#import "APProtal33Delegate.h"
#import "APProtalDelegate.h"
#import "IMsgExt.h"
#import "INetworkStatusMgrExt.h"
#import "MMKernelExt.h"
#import "MMService.h"
#import "MMWebViewDelegate.h"
#import "PublicWifiApInfoListViewControllerDelegate.h"
#import "PublicWifiCompletePageViewControllerDelegate.h"
#import "PublicWifiConnectedViewControllerDelegate.h"
#import "PublicWifiFrontInfoViewControllerDelegate.h"
#import "PublicWifiGetA8KeyLogicDelegate.h"
#import "PublicWifiNetworkLogicMgrDelegate.h"
#import "PublicWifiReportLocationLogicDelegate.h"
#import "PublicWifiScanListLogicDelegate.h"
#import "PublicWifiViewControllerDelegate.h"

@class APAccess, APAuth, APCheck, APCheckPwd, APPortal, APPortal33, CContact, MMUIViewController, MMWebViewController, NSMutableDictionary, NSString, PublicWifiCache, PublicWifiGetA8KeyLogic, PublicWifiNetworkLogicMgr, PublicWifiPCLogic, PublicWifiReportLocationLogic, PublicWifiReportQuality, PublicWifiScanListLogic;

@interface PublicWifiManager : MMService <APAuthDelegate, APCheckDelegate, APAccessDelegate, APProtalDelegate, PublicWifiGetA8KeyLogicDelegate, PublicWifiViewControllerDelegate, PublicWifiFrontInfoViewControllerDelegate, PublicWifiConnectedViewControllerDelegate, INetworkStatusMgrExt, APCheckPwdDelegate, PublicWifiNetworkLogicMgrDelegate, PublicWifiReportLocationLogicDelegate, PublicWifiApInfoListViewControllerDelegate, PublicWifiCompletePageViewControllerDelegate, APProtal33Delegate, PublicWifiScanListLogicDelegate, MMService, MMKernelExt, MMWebViewDelegate, IMsgExt>
{
    _Bool _isOnWifi;
    _Bool _isWifiChanged;
    _Bool _hasDoWifiManager;
    _Bool _isWaitingUserConfirm;
    _Bool _isOpenUrlProcessing;
    _Bool _isWaitingBindPhone;
    _Bool _isRegisterHotspotInterface;
    unsigned int _gAnnotationSwith;
    unsigned int _annotationExpire;
    NSString *_currSSID;
    NSString *_currMAC;
    PublicWifiCache *_cache;
    CContact *_currContact;
    PublicWifiReportQuality *_reportQuality;
    PublicWifiGetA8KeyLogic *_getA8KeyLogic;
    APAuth *_apAuth;
    APCheck *_apCheck;
    APAccess *_apAccess;
    APCheckPwd *_apCheckPwd;
    APPortal *_apPortal;
    APPortal33 *_apPortal33;
    PublicWifiPCLogic *_publicWifiPCLogic;
    APCheckPwd *_successedPwd;
    APPortal *_successedPortal;
    PublicWifiNetworkLogicMgr *_networkLogic;
    PublicWifiReportLocationLogic *_wifiReportLogic;
    MMWebViewController *_abroadApAuthWebViewController;
    MMUIViewController *_connectWebViewControler;
    NSString *_proto4ToConnectSSID;
    NSString *_proto4ToConnectPassword;
    NSMutableDictionary *_knownProtocol3HotspotsList;
    PublicWifiScanListLogic *_scanLogic;
}

- (void).cxx_destruct;
- (void)OnGetNewXmlMsg:(id)arg1 Type:(id)arg2 MsgWrap:(id)arg3;
@property(retain, nonatomic) MMWebViewController *abroadApAuthWebViewController; // @synthesize abroadApAuthWebViewController=_abroadApAuthWebViewController;
- (void)addHotspotToProtocol3List:(id)arg1 macAddr:(id)arg2;
- (void)addHotspotToProtocol4List:(id)arg1:(id)arg2;
- (void)addReportQualityDataWithApBase:(id)arg1 protoType:(unsigned int)arg2 errscene:(unsigned int)arg3;
@property(nonatomic) unsigned int annotationExpire; // @synthesize annotationExpire=_annotationExpire;
@property(retain, nonatomic) APAccess *apAccess; // @synthesize apAccess=_apAccess;
@property(retain, nonatomic) APAuth *apAuth; // @synthesize apAuth=_apAuth;
@property(retain, nonatomic) APCheck *apCheck; // @synthesize apCheck=_apCheck;
@property(retain, nonatomic) APCheckPwd *apCheckPwd; // @synthesize apCheckPwd=_apCheckPwd;
@property(retain, nonatomic) APPortal *apPortal; // @synthesize apPortal=_apPortal;
@property(retain, nonatomic) APPortal33 *apPortal33; // @synthesize apPortal33=_apPortal33;
- (void)asyncReadWifiSetting:(CDUnknownBlockType)arg1;
@property(retain, nonatomic) PublicWifiCache *cache; // @synthesize cache=_cache;
- (_Bool)checkWifiHotSpotList:(id)arg1:(id)arg2;
- (void)cleanCache;
- (void)connectToFreeWifiWithQRCode:(id)arg1 viewController:(id)arg2 scene:(unsigned int)arg3;
@property(retain, nonatomic) MMUIViewController *connectWebViewControler; // @synthesize connectWebViewControler=_connectWebViewControler;
@property(retain, nonatomic) CContact *currContact; // @synthesize currContact=_currContact;
@property(copy, nonatomic) NSString *currMAC; // @synthesize currMAC=_currMAC;
@property(copy, nonatomic) NSString *currSSID; // @synthesize currSSID=_currSSID;
- (void)dealloc;
- (void)delayConfig;
- (void)didExpiredOfApAuth:(id)arg1;
- (void)didFailOfAPPortal33:(id)arg1 errMsg:(id)arg2;
- (void)didFailOfAPPortal:(id)arg1 errMsg:(id)arg2;
- (void)didFailOfApAuth:(id)arg1 withErrCode:(int)arg2;
- (void)didFailOfApCheck:(id)arg1 withErrCode:(int)arg2;
- (void)didFailOfGetA8KeyLogic:(id)arg1;
- (void)didFailedWithApCheckPwd:(id)arg1 errorMsg:(id)arg2;
- (void)didGetWifiListSuccess:(id)arg1;
- (void)didQRCodeExpiredOfGetA8KeyLogic:(id)arg1 qrCode:(id)arg2;
- (void)didReadyOfApPortal:(id)arg1;
- (void)didReadyWithApCheckPwd:(id)arg1 protolType:(unsigned int)arg2;
- (void)didRunningOfApCheckPwd:(id)arg1;
- (void)didStartApAuth:(id)arg1;
- (void)didStartApPortal33:(id)arg1;
- (void)didStartApPortal:(id)arg1;
- (void)didSuccessOfAPPortal33:(id)arg1;
- (void)didSuccessOfAPPortal:(id)arg1;
- (void)didSuccessOfApAuth:(id)arg1;
- (void)didSuccessOfApCheck:(id)arg1;
- (void)didSuccessOfApCheckPwd:(id)arg1;
- (void)didSuccessOfGetA8KeyLogic:(id)arg1 result:(id)arg2;
- (void)doApAccessWithUrl:(id)arg1;
- (void)doApAuthAfterGetA8KeyResult:(id)arg1 viewController:(id)arg2 scene:(unsigned int)arg3 pageInfo:(id)arg4 isNeedConfirm:(_Bool)arg5;
- (void)doApPortalAfterGetA8KeyResult:(id)arg1 viewController:(id)arg2 scene:(unsigned int)arg3 pageInfo:(id)arg4 tid:(id)arg5 openid:(id)arg6 appid:(id)arg7;
- (void)doGetA8KeyForWifiWithQRCode:(id)arg1 scene:(unsigned int)arg2 viewController:(id)arg3;
- (void)doWifiManage;
- (id)forgroundAppTask;
- (void)frontViewControllerWillGoBack:(_Bool)arg1;
@property(nonatomic) unsigned int gAnnotationSwith; // @synthesize gAnnotationSwith=_gAnnotationSwith;
@property(retain, nonatomic) PublicWifiGetA8KeyLogic *getA8KeyLogic; // @synthesize getA8KeyLogic=_getA8KeyLogic;
- (id)getAbroadApAuthUrlWithSSID:(id)arg1;
- (unsigned int)getCurrentBindPhoneStatus;
- (void)gotoApAuthWithApCheckPwd:(id)arg1 protolType:(unsigned int)arg2;
- (void)gotoApPortalWithApCheckPwd:(id)arg1 tid:(id)arg2 openId:(id)arg3 appid:(id)arg4;
- (void)gotoFrontPageWithApPortal:(id)arg1;
- (void)handle3rdAppWithUrl:(id)arg1;
- (void)handleGetA8KeyResult:(id)arg1 withViewController:(id)arg2 withScene:(unsigned int)arg3;
- (_Bool)handleInnerSchemeFromViewController:(id)arg1 viewController:(id)arg2;
- (_Bool)handleLocateRequestFromViewController:(id)arg1 scene:(unsigned int)arg2;
- (void)handleLocationInfoReportWithApBase:(id)arg1;
- (void)handleOffWifi;
@property(nonatomic) _Bool hasDoWifiManager; // @synthesize hasDoWifiManager=_hasDoWifiManager;
- (id)init;
- (_Bool)isBindAboardPhone;
- (_Bool)isHotspotValidAndInList:(id)arg1 macAddr:(id)arg2;
@property(nonatomic) _Bool isOnWifi; // @synthesize isOnWifi=_isOnWifi;
@property(nonatomic) _Bool isOpenUrlProcessing; // @synthesize isOpenUrlProcessing=_isOpenUrlProcessing;
@property(nonatomic) _Bool isRegisterHotspotInterface; // @synthesize isRegisterHotspotInterface=_isRegisterHotspotInterface;
- (_Bool)isUserStayOnConnectingView;
@property(nonatomic) _Bool isWaitingBindPhone; // @synthesize isWaitingBindPhone=_isWaitingBindPhone;
@property(nonatomic) _Bool isWaitingUserConfirm; // @synthesize isWaitingUserConfirm=_isWaitingUserConfirm;
@property(nonatomic) _Bool isWifiChanged; // @synthesize isWifiChanged=_isWifiChanged;
@property(retain, nonatomic) NSMutableDictionary *knownProtocol3HotspotsList; // @synthesize knownProtocol3HotspotsList=_knownProtocol3HotspotsList;
- (void)logout;
@property(retain, nonatomic) PublicWifiNetworkLogicMgr *networkLogic; // @synthesize networkLogic=_networkLogic;
- (void)onAuthOK;
- (void)onNetworkStatusChange:(unsigned int)arg1;
- (void)onPublicWifiApInfoSelected:(id)arg1;
- (void)onPublicWifiApInfoViewContorllerWillGoBack;
- (void)onReportLocationAndGetBizWifiInfo:(id)arg1;
- (void)onReportLocationFailed:(unsigned long long)arg1;
- (void)onSendAddWiFiBrandContactResponse:(id)arg1;
- (void)onServiceClearData;
- (void)onServiceEnterBackground;
- (void)onServiceEnterForeground;
- (void)onServiceInit;
- (void)onServiceReloadData;
@property(retain, nonatomic) NSString *proto4ToConnectPassword; // @synthesize proto4ToConnectPassword=_proto4ToConnectPassword;
@property(retain, nonatomic) NSString *proto4ToConnectSSID; // @synthesize proto4ToConnectSSID=_proto4ToConnectSSID;
@property(nonatomic) __weak PublicWifiPCLogic *publicWifiPCLogic; // @synthesize publicWifiPCLogic=_publicWifiPCLogic;
- (void)readWifiSetting;
- (void)refreshApAuthPageIfNeed;
- (void)registerHotspotHelper;
@property(retain, nonatomic) PublicWifiReportQuality *reportQuality; // @synthesize reportQuality=_reportQuality;
- (void)requestAddContactWithApbase:(id)arg1;
- (void)resetWaitingFlagWhenFailed;
- (void)restartApAuth;
@property(retain, nonatomic) PublicWifiScanListLogic *scanLogic; // @synthesize scanLogic=_scanLogic;
- (void)sendCloseEventToObserver;
- (void)setConfirmStateToConnect:(_Bool)arg1 ComfirmCompleteBlock:(CDUnknownBlockType)arg2;
- (void)setQinghuaiPageNeedFollowStateWithUserName:(id)arg1;
@property(retain, nonatomic) APPortal *successedPortal; // @synthesize successedPortal=_successedPortal;
@property(retain, nonatomic) APCheckPwd *successedPwd; // @synthesize successedPwd=_successedPwd;
- (void)setWaitBindPhoneStatus:(_Bool)arg1;
@property(retain, nonatomic) PublicWifiReportLocationLogic *wifiReportLogic; // @synthesize wifiReportLogic=_wifiReportLogic;
- (_Bool)shouldOpenWebview;
- (void)showBindPhoneViewFromFrontPage;
- (void)showErrorViewControllerWithErrMsg:(id)arg1 fromViewContorller:(id)arg2;
- (void)showGuidePageAfterScanQrCodeOfApPortal;
- (id)showUrlOfCurrApAuth;
- (void)showViewControllerWithApBase:(id)arg1 fromViewController:(id)arg2 isNeedConfirm:(_Bool)arg3;
- (id)ssidOfApAuth;
- (int)stateOfApAuth;
- (void)userConfirm;
- (_Bool)verifyCurrentSSid;
- (void)webViewReturn:(id)arg1;
- (void)wifiCompletePageViewControlerWillDone:(_Bool)arg1;
- (void)wifiConnenctedViewControlerWillDone:(_Bool)arg1;
- (void)wifiViewControllerWillGoBack;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

